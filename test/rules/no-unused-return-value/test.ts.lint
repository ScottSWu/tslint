function A() {
    return 1;
}

function B(x: string) {
    console.log(x);
}

A();
~~~  [return value is unused]

// These are OK because the return value is used in an expression
(A());
A() + 1;

B(A().toString());

class C {
  constructor() {
  }

  D() {
    return 2;
  }

  E() {
  }
}

new C();
~~~~~~~  [constructed object is unused]
let x = new C();

x.D();
~~~~~  [return value is unused]

let y = x.D();
x.E();

// Ok because it was specified in the config
let confObj = {
  confFn: () => {
    return 1;
  },

  otherFn: () => {
    return 2;
  }
}

confObj.confFn();

confObj.otherFn();
~~~~~~~~~~~~~~~~~  [return value is unused]
